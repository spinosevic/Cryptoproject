{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/Table.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.netto = function () {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"Netto \", !!_this.props.total[_this.props.total.length - 1] ? _this.props.total[_this.props.total.length - 1][1] - _this.props.breakevenpoint : null, \" \");\n    };\n\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      console.log(!!this.props.total[this.props.total.length - 1] ? this.props.total[this.props.total.length - 1][1] : null);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.netto(), React.createElement(Chart, {\n        width: '1000px',\n        height: '500px',\n        chartType: \"Table\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Loading Chart\"),\n        data: [[{\n          type: 'string',\n          label: 'Coin'\n        }, {\n          type: 'number',\n          label: 'Amount'\n        }, {\n          type: 'number',\n          label: 'Initial Price per Unit (EUR)'\n        }, {\n          type: 'number',\n          label: 'Total (EUR)'\n        }, {\n          type: 'number',\n          label: 'Netto'\n        }], ['Mike', 100, 100, 100, 100]],\n        options: {\n          showRowNumber: true,\n          colors: ['#e0440e', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6']\n        },\n        rootProps: {\n          'data-testid': '1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nexport default Table;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/Table.js"],"names":["React","Chart","Table","netto","props","total","length","breakevenpoint","console","log","type","label","showRowNumber","colors","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;IAEMC,K;;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ,YAAK;AAEb,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,CAAC,CAAC,MAAKC,KAAL,CAAWC,KAAX,CAAiB,MAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAAwB,CAAzC,CAAF,GACN,MAAKF,KAAL,CAAWC,KAAX,CAAiB,MAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAAwB,CAAzC,EAA4C,CAA5C,IAA+C,MAAKF,KAAL,CAAWG,cADpD,GAEN,IAHM,MAAR;AAIC,K;;;;;;;6BACK;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAa,CAAC,CAAC,KAAKL,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAAwB,CAAzC,CAAF,GAA8C,KAAKF,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAAwB,CAAzC,EAA4C,CAA5C,CAA9C,GAA6F,IAA1G;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKH,KAAL,EADD,EAEA,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,MAAM,EAAE,OAFV;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJV;AAKE,QAAA,IAAI,EAAE,CACJ,CACE;AAAEO,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SADF,EAEE;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAFF,EAGE;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAHF,EAIE;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAJF,EAKE;AAAED,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SALF,CADI,EAQJ,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,CARI,CALR;AAgBE,QAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,IADR;AAEPC,UAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C;AAFD,SAhBX;AAoBE,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB,SApBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF;AA2BD;;;;EAxCmBb,KAAK,CAACc,S;;AA2C1B,eAAeZ,KAAf","sourcesContent":["import React from 'react'\nimport { Chart } from \"react-google-charts\";\n\nclass Table extends React.Component{\n\n\n  netto = () =>{\n\n  return  <h3 >\n   Netto {!!this.props.total[this.props.total.length-1]?\n    this.props.total[this.props.total.length-1][1]-this.props.breakevenpoint:\n    null} </h3>\n  }\nrender(){\n  console.log((!!this.props.total[this.props.total.length-1]?this.props.total[this.props.total.length-1][1]:null))\n\n  return(\n    <div>\n    {this.netto()}\n    <Chart\n      width={'1000px'}\n      height={'500px'}\n      chartType=\"Table\"\n      loader={<div>Loading Chart</div>}\n      data={[\n        [\n          { type: 'string', label: 'Coin' },\n          { type: 'number', label: 'Amount' },\n          { type: 'number', label: 'Initial Price per Unit (EUR)' },\n          { type: 'number', label: 'Total (EUR)' },\n          { type: 'number', label: 'Netto' },\n        ],\n        ['Mike', 100, 100,100,100],\n\n      ]}\n      options={{\n        showRowNumber: true,\n        colors: ['#e0440e', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6']\n      }}\n      rootProps={{ 'data-testid': '1' }}\n    />\n    </div>\n  )\n}\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}