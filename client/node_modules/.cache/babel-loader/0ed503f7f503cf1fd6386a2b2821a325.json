{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/Bot/Bot.js\";\nimport React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport Form from './Form';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar Bot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Bot, _React$Component);\n\n  function Bot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Bot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Bot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      information_submitted: false,\n      coins_balances: []\n    };\n    return _this;\n  }\n\n  _createClass(Bot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.username) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" Create your bot is easy!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"A Cryptobot is a program that interact with the Bittrex exchange market for you performing automatic actions based on algorithm and strategy that you will decide. At the moment the average daily volatility of bitcoin in the 2 months has been almost 4%. volatility is defined as the difference between the daily maximum and minimum value, these fluctuations can represent a good opportunity for traders even in periods where the daily average values seem to be almost constant. To perform this kind of trading it is required a lot of commitment and attention to follow the markets and perform operations at the right second! CryptoBot can perform these operations for you. Set it up a bot is easy!\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Activate the api key and api secret on Bittrex settings\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"allow interaction with 127.0.1 IP in the IP Whitelist\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Submit the informations here, select the coins and strategy \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Done!\")), this.state.information_submitted ? React.createElement(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Edit API info\") : \"Form\");\n    }\n  }]);\n\n  return Bot;\n}(React.Component);\n\nBot.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Bot);","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/Bot/Bot.js"],"names":["React","Route","Link","Switch","Button","PropTypes","Form","withStyles","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","Bot","state","information_submitted","coins_balances","props","username","history","push","classes","button","Component","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,QAAQ,EAAE;AAFD,KADY;AAKvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAcC,IADjB;AAETC,MAAAA,WAAW,EAAER,KAAK,CAACM,OAAN,CAAcC;AAFlB,KALY;AASvBE,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE;AADN,KATgB;AAYvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH;AAZiB,GAAL;AAAA,CAApB;;IAiBMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAM;AACJC,MAAAA,qBAAqB,EAAE,KADnB;AAEJC,MAAAA,cAAc,EAAC;AAFX,K;;;;;;wCAKe;AACnB,UAAG,CAAC,KAAKC,KAAL,CAAWC,QAAf,EAAwB;AACtB,aAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AAAC;;;6BAEI;AAAA,UACEC,OADF,GACc,KAAKJ,KADnB,CACEI,OADF;AAGN,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,osBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAHF,EASG,KAAKP,KAAL,CAAWC,qBAAX,GACC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAqC,QAAA,OAAO,EAAC,WAA7C;AAAyD,QAAA,KAAK,EAAC,SAA/D;AAAyE,QAAA,SAAS,EAAEM,OAAO,CAACC,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,GAIC,MAbJ,CADF;AAiBD;;;;EA/Be/B,KAAK,CAACgC,S;;AAkCxBV,GAAG,CAACW,SAAJ,GAAgB;AACdH,EAAAA,OAAO,EAAEzB,SAAS,CAAC6B,MAAV,CAAiBC;AADZ,CAAhB;AAGA,eAAe5B,UAAU,CAACC,MAAD,CAAV,CAAmBc,GAAnB,CAAf","sourcesContent":["import React from 'react'\nimport { Route, Link, Switch } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport Form from './Form'\n\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass Bot extends React.Component{\n  state={\n    information_submitted: false,\n    coins_balances:[],\n  }\n\n  componentDidMount () {\n    if(!this.props.username){\n      this.props.history.push('/')\n    }}\n\n  render(){\n    const { classes } = this.props;\n\n    return(\n      <>\n        <h1> Create your bot is easy!</h1>\n        <p>A Cryptobot is a program that interact with the Bittrex exchange market for you performing automatic actions based on algorithm and strategy that you will decide. At the moment the average daily volatility of bitcoin in the 2 months has been almost 4%. volatility is defined as the difference between the daily maximum and minimum value, these fluctuations can represent a good opportunity for traders even in periods where the daily average values seem to be almost constant. To perform this kind of trading it is required a lot of commitment and attention to follow the markets and perform operations at the right second! CryptoBot can perform these operations for you. Set it up a bot is easy!</p>\n        <ul>\n          <li>Activate the api key and api secret on Bittrex settings</li>\n          <li>allow interaction with 127.0.1 IP in the IP Whitelist</li>\n          <li>Submit the informations here, select the coins and strategy </li>\n          <li>Done!</li>\n        </ul>\n        {this.state.information_submitted?\n          <Button type=\"submit\" value=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\n                Edit API info\n          </Button>:\n          \"Form\"\n}\n      </>)\n  }\n}\n\nBot.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Bot)\n"]},"metadata":{},"sourceType":"module"}