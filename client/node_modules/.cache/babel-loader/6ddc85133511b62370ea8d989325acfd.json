{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"init\",\n    value: function init() {\n      this.baseUrl = 'http://localhost:3001';\n      this.signupUrl = this.baseUrl + '/signup';\n      this.signinUrl = this.baseUrl + '/signin';\n      this.validateUrl = this.baseUrl + '/validate';\n      this.itemUrl = this.baseUrl + '/item';\n      this.newsUrl = 'https://newsapi.org/v2/top-headlines?sources=crypto-coins-news&apiKey=eb613f5fa10842a383014ef24f0a4740';\n      this.createNews = this.baseUrl + '/createnews';\n      this.getNewsUrl = this.baseUrl + '/getnews';\n      this.getCoinsUrl = this.baseUrl + '/getcoins';\n      this.dailyUpdate = this.baseUrl + '/dailyUpdate';\n    }\n  }, {\n    key: \"signin\",\n    value: function signin(user) {\n      return fetch(this.signinUrl, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"signup\",\n    value: function signup(user) {\n      return fetch(this.signupUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"item\",\n    value: function item(state) {\n      return fetch(this.itemUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: state\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var token = localStorage.getItem('token');\n      return fetch(this.validateUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"newsAPI\",\n    value: function newsAPI() {\n      var _this = this;\n\n      var req = new Request(this.newsUrl);\n      return fetch(req).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        return fetch(_this.createNews, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            json: json\n          })\n        });\n      });\n    }\n  }, {\n    key: \"getNews\",\n    value: function getNews() {\n      return fetch(this.getNewsUrl).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getCoins\",\n    value: function getCoins() {\n      var token = localStorage.getItem('token');\n      return fetch(this.getCoinsUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getCoinSymbols\",\n    value: function getCoinSymbols() {\n      return fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false').then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        var newArray = [];\n        console.log(json);\n        json.slice(0, 100).map(function (e) {\n          return newArray.push({\n            value: e[\"symbol\"],\n            label: e[\"id\"]\n          });\n        });\n        return newArray;\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(coin) {\n      return fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coin)).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"firstCoinHistory\",\n    value: function firstCoinHistory(state) {\n      var total = 0;\n      var promises = state.coins.map(function (coin) {\n        return fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coin.coin, \"/history?date=\").concat(state.created)).then(function (resp) {\n          return resp.json();\n        }).then(function (json) {\n          return total += json.market_data.current_price.eur * coin.amount;\n        });\n      });\n      return Promise.all(promises);\n    }\n  }, {\n    key: \"updateTotal\",\n    value: function updateTotal(total, username) {\n      return fetch(this.dailyUpdate, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          total: total\n        })\n      }).then(function (resp) {\n        return console.log(resp.json());\n      });\n    }\n  }, {\n    key: \"getAllCoinsHistory\",\n    value: function getAllCoinsHistory(state, days, breakevenpoint) {\n      var arrayTotal = [];\n      var secondArray = [];\n\n      var _loop = function _loop(i) {\n        var total = 0;\n        var day = new Date(API.changeDateFormatToUS(state.last_access));\n        day.setDate(day.getDate() + i);\n        var selectedDay = API.changeDataFormatfromDateToEU(day);\n        var promises = state.coins.map(function (coin) {\n          return fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coin.coin, \"/history?date=\").concat(selectedDay)).then(function (resp) {\n            return resp.json();\n          }).then(function (json) {\n            total += json.market_data.current_price.eur * coin.amount;\n            return arrayTotal[i] = total;\n          });\n        });\n        Promises.all(promises).then(console.log(arrayTotal));\n      };\n\n      for (var i = 0; i <= days; i++) {\n        _loop(i);\n      }\n\n      return secondArray;\n    }\n  }, {\n    key: \"changeDateFormatToUS\",\n    value: function changeDateFormatToUS(string) {\n      return \"\".concat(string.slice(3, 5), \"/\").concat(string.slice(0, 2), \"/\").concat(string.slice(6));\n    }\n  }, {\n    key: \"changeDataFormatfromDateToEU\",\n    value: function changeDataFormatfromDateToEU(date) {\n      return \"\".concat((\"0\" + date.getDate()).slice(-2), \"-\").concat((\"0\" + (date.getMonth() + 1)).slice(-2), \"-\").concat(date.getFullYear());\n    }\n  }]);\n\n  return API;\n}();\n\nAPI.init();\nexport default API;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/API.js"],"names":["API","baseUrl","signupUrl","signinUrl","validateUrl","itemUrl","newsUrl","createNews","getNewsUrl","getCoinsUrl","dailyUpdate","user","fetch","method","headers","body","JSON","stringify","then","resp","json","state","token","localStorage","getItem","req","Request","newArray","console","log","slice","map","e","push","value","label","coin","total","promises","coins","created","market_data","current_price","eur","amount","Promise","all","username","days","breakevenpoint","arrayTotal","secondArray","i","day","Date","changeDateFormatToUS","last_access","setDate","getDate","selectedDay","changeDataFormatfromDateToEU","Promises","string","date","getMonth","getFullYear","init"],"mappings":"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","sourcesContent":["class API {\n\n  static init () {\n    this.baseUrl='http://localhost:3001'\n    this.signupUrl=this.baseUrl+'/signup'\n    this.signinUrl=this.baseUrl+'/signin'\n    this.validateUrl=this.baseUrl+'/validate'\n    this.itemUrl=this.baseUrl+'/item'\n    this.newsUrl='https://newsapi.org/v2/top-headlines?sources=crypto-coins-news&apiKey=eb613f5fa10842a383014ef24f0a4740'\n    this.createNews=this.baseUrl+'/createnews'\n    this.getNewsUrl=this.baseUrl+'/getnews'\n    this.getCoinsUrl=this.baseUrl+'/getcoins'\n    this.dailyUpdate=this.baseUrl+'/dailyUpdate'\n\n  }\n\n  static signin (user) {\n    return fetch(this.signinUrl, {\n      method: \"POST\",\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({user})\n    })\n    .then(resp => resp.json())\n  }\n\n  static signup (user) {\n   return fetch(this.signupUrl, {\n     method: 'POST',\n     headers: {'Content-Type': 'application/json'},\n     body: JSON.stringify({user})\n   }).then(resp => resp.json())\n }\n\n   static item (state) {\n    return fetch(this.itemUrl, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({state})\n    }).then(resp => resp.json())\n  }\n\n static validate () {\n   const token= localStorage.getItem('token')\n   return fetch(this.validateUrl, {\n     method: 'GET',\n     headers: {\n       'Authorization': token\n     },\n   }).then(resp => resp.json())\n }\n\n static newsAPI () {\n   var req = new Request(this.newsUrl);\n   return fetch(req)\n   .then(resp => resp.json())\n   .then(json=>{\n     return fetch(this.createNews, {\n       method: \"POST\",\n       headers: {'Content-Type': 'application/json'},\n       body: JSON.stringify({json})\n     })\n   })\n }\n\n static getNews () {\n   return fetch(this.getNewsUrl)\n   .then(resp => resp.json())\n }\n\n static getCoins () {\n   const token= localStorage.getItem('token')\n   return fetch(this.getCoinsUrl, {\n     method: 'GET',\n     headers: {\n       'Authorization': token\n     },\n   })\n   .then(resp => resp.json())\n }\n\n\n static getCoinSymbols () {\n    return fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n   .then(resp => resp.json())\n   .then(json => {\n     let newArray=[]\n     console.log(json)\n     json.slice(0,100).map(function(e) {\n      return newArray.push({value:e[\"symbol\"], label: e[\"id\"]})\n  }\n)\n   return newArray\n })\n }\n\n\nstatic getValue (coin) {\n  return fetch(`https://api.coingecko.com/api/v3/coins/${coin}`)\n .then(resp => resp.json())\n}\n\n\nstatic firstCoinHistory(state){\n  let total = 0\n   const promises = state.coins.map(coin=>{\n    return  fetch(`https://api.coingecko.com/api/v3/coins/${coin.coin}/history?date=${state.created}`)\n    .then(resp => resp.json())\n    .then(json=>{\n      return total+=json.market_data.current_price.eur*coin.amount})\n   })\n   return Promise.all(promises)\n }\n\n static updateTotal(total,username){\n   return fetch(this.dailyUpdate, {\n     method: 'PUT',\n     headers: {'Content-Type': 'application/json'},\n     body: JSON.stringify({username: username,total: total})\n   }).then(resp => console.log(resp.json()))\n }\n\n static getAllCoinsHistory(state,days,breakevenpoint){\n   let arrayTotal=[]\n   let secondArray=[]\n    for (let i = 0; i <= days; i++){\n     let total=0\n     let day = new Date(API.changeDateFormatToUS(state.last_access));\n     day.setDate(day.getDate() + i)\n     let selectedDay= API.changeDataFormatfromDateToEU(day)\n      const promises = state.coins.map(coin=>{\n        return  fetch(`https://api.coingecko.com/api/v3/coins/${coin.coin}/history?date=${selectedDay}`)\n        .then(resp => resp.json())\n        .then(json=>{\n         total+=json.market_data.current_price.eur*coin.amount\n         return arrayTotal[i]=total\n        })\n      })\n      Promises.all(promises)\n      .then(console.log(arrayTotal))\n\n    }\n    return secondArray\n  }\n\n  static changeDateFormatToUS (string){\n    return `${string.slice(3,5)}/${string.slice(0,2)}/${string.slice(6)}`\n  }\n\n  static changeDataFormatfromDateToEU (date){\n    return `${(\"0\" + date.getDate()).slice(-2)}-${(\"0\" + (date.getMonth() + 1)).slice(-2)}-${date.getFullYear()}`\n  }\n\n\n\n\n\n\n\n\n\n}\n\n  API.init()\n\n  export default API\n"]},"metadata":{},"sourceType":"module"}