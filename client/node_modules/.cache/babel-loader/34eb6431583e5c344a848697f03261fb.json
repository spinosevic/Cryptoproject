{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"init\",\n    value: function init() {\n      this.baseUrl = 'http://localhost:3001';\n      this.signupUrl = this.baseUrl + '/signup';\n      this.signinUrl = this.baseUrl + '/signin';\n      this.validateUrl = this.baseUrl + '/validate';\n    }\n  }, {\n    key: \"signin\",\n    value: function signin(user) {\n      return fetch(this.signinUrl, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"signup\",\n    value: function signup(user) {\n      return fetch(this.signupUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(user) {\n      var token = localStorage.token;\n      return fetch(this.validateUrl, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify({\n          username: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }]);\n\n  return API;\n}();\n\nAPI.init();\nexport default API;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/API.js"],"names":["API","baseUrl","signupUrl","signinUrl","validateUrl","user","fetch","method","headers","body","JSON","stringify","then","resp","json","token","localStorage","username","init"],"mappings":";;;IAAMA,G;;;;;;;;;2BAEW;AACb,WAAKC,OAAL,GAAa,uBAAb;AACA,WAAKC,SAAL,GAAe,KAAKD,OAAL,GAAa,SAA5B;AACA,WAAKE,SAAL,GAAe,KAAKF,OAAL,GAAa,SAA5B;AACA,WAAKG,WAAL,GAAiB,KAAKH,OAAL,GAAa,WAA9B;AACD;;;2BAEcI,I,EAAM;AACnB,aAAOC,KAAK,CAAC,KAAKH,SAAN,EAAiB;AAC3BI,QAAAA,MAAM,EAAE,MADmB;AAE3BC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFkB;AAG3BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,UAAAA,IAAI,EAAJA;AAAD,SAAf;AAHqB,OAAjB,CAAL,CAKNO,IALM,CAKD,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OALH,CAAP;AAMD;;;2BAEcT,I,EAAM;AACpB,aAAOC,KAAK,CAAC,KAAKJ,SAAN,EAAiB;AAC3BK,QAAAA,MAAM,EAAE,MADmB;AAE3BC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFkB;AAG3BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,UAAAA,IAAI,EAAJA;AAAD,SAAf;AAHqB,OAAjB,CAAL,CAIJO,IAJI,CAIC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAJL,CAAP;AAKD;;;6BAEgBT,I,EAAM;AACrB,UAAMU,KAAK,GAAEC,YAAY,CAACD,KAA1B;AACA,aAAOT,KAAK,CAAC,KAAKF,WAAN,EAAmB;AAC7BG,QAAAA,MAAM,EAAE,KADqB;AAE7BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiBO;AAFV,SAFoB;AAM7BN,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACM,UAAAA,QAAQ,EAAEZ;AAAX,SAAf;AANuB,OAAnB,CAAL,CAOJO,IAPI,CAOC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAPL,CAAP;AAQD;;;;;;AAGAd,GAAG,CAACkB,IAAJ;AAEA,eAAelB,GAAf","sourcesContent":["class API {\n\n  static init () {\n    this.baseUrl='http://localhost:3001'\n    this.signupUrl=this.baseUrl+'/signup'\n    this.signinUrl=this.baseUrl+'/signin'\n    this.validateUrl=this.baseUrl+'/validate'\n  }\n\n  static signin (user) {\n    return fetch(this.signinUrl, {\n      method: \"POST\",\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({user})\n    })\n    .then(resp => resp.json())\n  }\n\n  static signup (user) {\n   return fetch(this.signupUrl, {\n     method: 'POST',\n     headers: {'Content-Type': 'application/json'},\n     body: JSON.stringify({user})\n   }).then(resp => resp.json())\n }\n\n static validate (user) {\n   const token= localStorage.token\n   return fetch(this.validateUrl, {\n     method: 'get',\n     headers: {\n       'Content-Type': 'application/json',\n       'Authorization': token\n     },\n     body: JSON.stringify({username: user})\n   }).then(resp => resp.json())\n }\n\n}\n  API.init()\n\n  export default API\n"]},"metadata":{},"sourceType":"module"}