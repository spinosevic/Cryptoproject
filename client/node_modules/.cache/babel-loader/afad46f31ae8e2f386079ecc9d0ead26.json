{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/PersonalPage/Graphs3.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport PersonalPageCss from './PersonalPage.css';\n\nvar Graphs3 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Graphs3, _React$Component);\n\n  function Graphs3() {\n    _classCallCheck(this, Graphs3);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Graphs3).apply(this, arguments));\n  }\n\n  _createClass(Graphs3, [{\n    key: \"render\",\n    value: function render() {\n      var parsedDataforLineChart = this.props.total.map(function (x) {\n        return x.map(function (y) {\n          return !Number(y) ? y : Number(y);\n        });\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Chart, {\n        width: '100%',\n        height: '100%',\n        chartType: \"LineChart\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Loading Chart\"),\n        data: parsedDataforLineChart,\n        options: {\n          hAxis: {\n            title: 'Day'\n          },\n          vAxis: {\n            title: \"\".concat(this.props.state.showing, \" in EUR\")\n          },\n          series: {\n            1: {\n              curveType: 'function'\n            }\n          }\n        },\n        rootProps: {\n          'data-testid': '2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Graphs3;\n}(React.Component);\n\nexport default Graphs3;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/PersonalPage/Graphs3.js"],"names":["React","Chart","PersonalPageCss","Graphs3","parsedDataforLineChart","props","total","map","x","y","Number","hAxis","title","vAxis","state","showing","series","curveType","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;IAGMC,O;;;;;;;;;;;;;6BAEI;AAEN,UAAIC,sBAAsB,GAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,CAAC,EAAE;AACjD,eAAOA,CAAC,CAACD,GAAF,CAAM,UAAAE,CAAC,EAAE;AACd,iBAAQ,CAACC,MAAM,CAACD,CAAD,CAAP,GACRA,CADQ,GAERC,MAAM,CAACD,CAAD,CAFN;AAGD,SAJM,CAAP;AAKD,OAN0B,CAA3B;AASA,aAAO,0CACL,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,MAAM,EAAE,MAFV;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJV;AAKE,QAAA,IAAI,EAAEL,sBALR;AAME,QAAA,OAAO,EAAE;AACPO,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE;AADF,WADA;AAIPC,UAAAA,KAAK,EAAE;AACLD,YAAAA,KAAK,YAAK,KAAKP,KAAL,CAAWS,KAAX,CAAiBC,OAAtB;AADA,WAJA;AAOPC,UAAAA,MAAM,EAAE;AACN,eAAG;AAAEC,cAAAA,SAAS,EAAE;AAAb;AADG;AAPD,SANX;AAiBE,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB,SAjBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAP;AAuBD;;;;EApCmBjB,KAAK,CAACkB,S;;AAwC5B,eAAef,OAAf","sourcesContent":["import React from 'react'\nimport { Chart } from \"react-google-charts\";\nimport PersonalPageCss from './PersonalPage.css'\n\n\nclass Graphs3 extends React.Component{\n\n  render(){\n\n    let parsedDataforLineChart=this.props.total.map(x=>{\n      return x.map(y=>{\n        return (!Number(y) ?\n        y :\n        Number(y))\n      })\n    })\n\n\n    return(<>\n      <Chart\n        width={'100%'}\n        height={'100%'}\n        chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={parsedDataforLineChart}\n        options={{\n          hAxis: {\n            title: 'Day',\n          },\n          vAxis: {\n            title: `${this.props.state.showing} in EUR`,\n          },\n          series: {\n            1: { curveType: 'function' },\n          },\n        }}\n        rootProps={{ 'data-testid': '2' }}\n      />\n          </>\n\n    )\n  }\n\n\n}\nexport default Graphs3\n"]},"metadata":{},"sourceType":"module"}