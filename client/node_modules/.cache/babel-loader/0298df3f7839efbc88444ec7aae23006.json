{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/PersonalPage/Graphs.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport PersonalPageCss from './PersonalPage.css';\n\nvar Graphs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Graphs, _React$Component);\n\n  function Graphs() {\n    _classCallCheck(this, Graphs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Graphs).apply(this, arguments));\n  }\n\n  _createClass(Graphs, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var coins_array = this.props.coins.map(function (coin) {\n        return [coin.coin, coin.amount * coin.price_per_unit];\n      });\n      coins_array.splice(0, 0, ['Coin', 'Value']);\n      var parsedDataforLineChart = this.props.total.map(function (x) {\n        return x.map(function (y) {\n          return !Number(y) ? y : Number(y);\n        });\n      });\n      var object = this.props.prices;\n      var prices = [['Coin', 'Value']];\n\n      var _loop = function _loop(key) {\n        var amount = 0;\n\n        _this.props.coins.map(function (coin) {\n          return key === coin.coin ? amount = coin.amount : null;\n        });\n\n        prices.push([key, object[key].eur * amount]);\n      };\n\n      for (var key in object) {\n        _loop(key);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Chart1-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        width: '50%',\n        height: '100%',\n        chartType: \"PieChart\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Loading Chart\"),\n        data: coins_array,\n        options: {\n          title: 'Initial Investment Diversification in EUR'\n        },\n        rootProps: {\n          'data-testid': '1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        width: '50%',\n        height: '100%',\n        chartType: \"PieChart\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Loading Chart\"),\n        data: prices,\n        options: {\n          title: 'Current Investment Value in EUR'\n        },\n        rootProps: {\n          'data-testid': '1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Chart3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        width: '100%',\n        height: '200%',\n        chartType: \"LineChart\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Loading Chart\"),\n        data: parsedDataforLineChart,\n        options: {\n          hAxis: {\n            title: 'Day'\n          },\n          vAxis: {\n            title: \"\".concat(this.props.state.showing, \" in EUR\")\n          },\n          series: {\n            1: {\n              curveType: 'function'\n            }\n          }\n        },\n        rootProps: {\n          'data-testid': '2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Graphs;\n}(React.Component);\n\nexport default Graphs;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/PersonalPage/Graphs.js"],"names":["React","Chart","PersonalPageCss","Graphs","coins_array","props","coins","map","coin","amount","price_per_unit","splice","parsedDataforLineChart","total","x","y","Number","object","prices","key","push","eur","title","hAxis","vAxis","state","showing","series","curveType","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Chart } from \"react-google-charts\";\nimport PersonalPageCss from './PersonalPage.css'\n\n\nclass Graphs extends React.Component{\n\n  render(){\n    let coins_array = this.props.coins.map(coin=>[coin.coin,coin.amount*coin.price_per_unit])\n    coins_array.splice(0,0,['Coin', 'Value'])\n    let parsedDataforLineChart=this.props.total.map(x=>{\n      return x.map(y=>{\n        return (!Number(y) ?\n        y :\n        Number(y))\n      })\n    })\n    let object=this.props.prices\n    let prices=[['Coin', 'Value']]\n    for(let key in object){\n      let amount= 0\n      this.props.coins.map(coin=>(key===coin.coin?amount=coin.amount:null))\n      prices.push([key, object[key].eur*amount])\n    }\n    return(\n      <div>\n        <div className=\"Chart1-2\">\n\n          <Chart\n              width={'50%'}\n              height={'100%'}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={coins_array}\n              options={{\n                title: 'Initial Investment Diversification in EUR',\n              }}\n              rootProps={{ 'data-testid': '1' }}\n            />\n        </div>\n        <div className=\"Chart2\">\n        <Chart\n            width={'50%'}\n            height={'100%'}\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={prices}\n            options={{\n              title: 'Current Investment Value in EUR',\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n          </div>\n\n        <div className=\"Chart3\">\n          <Chart\n            width={'100%'}\n            height={'200%'}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={parsedDataforLineChart}\n            options={{\n              hAxis: {\n                title: 'Day',\n              },\n              vAxis: {\n                title: `${this.props.state.showing} in EUR`,\n              },\n              series: {\n                1: { curveType: 'function' },\n              },\n            }}\n            rootProps={{ 'data-testid': '2' }}\n          />\n        </div>\n        </div>\n    )\n  }\n\n\n}\nexport default Graphs\n"]},"metadata":{},"sourceType":"module"}