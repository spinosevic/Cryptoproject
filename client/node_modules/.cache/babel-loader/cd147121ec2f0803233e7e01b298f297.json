{"ast":null,"code":"import _regeneratorRuntime from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"init\",\n    value: function init() {\n      this.baseUrl = 'http://localhost:3001';\n      this.signupUrl = this.baseUrl + '/signup';\n      this.signinUrl = this.baseUrl + '/signin';\n      this.validateUrl = this.baseUrl + '/validate';\n      this.itemUrl = this.baseUrl + '/item';\n      this.newsUrl = 'https://newsapi.org/v2/top-headlines?sources=crypto-coins-news&apiKey=eb613f5fa10842a383014ef24f0a4740';\n      this.createNews = this.baseUrl + '/createnews';\n      this.getNewsUrl = this.baseUrl + '/getnews';\n      this.getCoinsUrl = this.baseUrl + '/getcoins';\n      this.dailyUpdate = this.baseUrl + '/dailyUpdate';\n      this.getTotal = this.baseUrl + '/getTotal';\n      this.saveNote = this.baseUrl + '/saveNote';\n      this.updateCoins = this.baseUrl + '/updateCoins';\n    }\n  }, {\n    key: \"signin\",\n    value: function signin(user) {\n      return fetch(this.signinUrl, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"signup\",\n    value: function signup(user) {\n      return fetch(this.signupUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"item\",\n    value: function item(state) {\n      return fetch(this.itemUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: state\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var token = localStorage.getItem('token');\n      return fetch(this.validateUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"newsAPI\",\n    value: function newsAPI() {\n      var _this = this;\n\n      var req = new Request(this.newsUrl);\n      return fetch(req).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        return fetch(_this.createNews, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            json: json\n          })\n        });\n      });\n    }\n  }, {\n    key: \"getnewsAPI\",\n    value: function getnewsAPI() {\n      var req = new Request(this.newsUrl);\n      return fetch(req).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"handleNews\",\n    value: function () {\n      var _handleNews = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.getnewsAPI();\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleNews() {\n        return _handleNews.apply(this, arguments);\n      }\n\n      return handleNews;\n    }()\n  }, {\n    key: \"getNews\",\n    value: function getNews() {\n      return fetch(this.getNewsUrl).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getCoins\",\n    value: function getCoins() {\n      var token = localStorage.getItem('token');\n      return fetch(this.getCoinsUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getTotal2\",\n    value: function getTotal2() {\n      var token = localStorage.getItem('token');\n      return fetch(this.getTotal, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"updateCoins\",\n    value: function updateCoins(coins) {\n      var token = localStorage.getItem('token');\n      return fetch(this.updateCoins, {\n        method: 'POST',\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          coins: coins\n        })\n      }).then(function (resp) {\n        return console.log(resp.json());\n      });\n    }\n  }, {\n    key: \"updateCoins2\",\n    value: function updateCoins2(coins) {\n      var token = localStorage.getItem('token');\n      return fetch(this.updateCoins, {\n        method: 'POST',\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          results: coins\n        })\n      });\n    }\n  }, {\n    key: \"getCoinsCurrentValue\",\n    value: function getCoinsCurrentValue(coins) {\n      var string = '';\n      coins.map(function (coin) {\n        return string += \"\".concat(coin, \"%2C\");\n      });\n      return fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=\".concat(string, \"&vs_currencies=eur\")).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getCoinSymbols\",\n    value: function getCoinSymbols() {\n      return fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false').then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        var newArray = [];\n        json.slice(0, 100).map(function (e) {\n          return newArray.push({\n            value: e[\"symbol\"],\n            label: e[\"id\"]\n          });\n        });\n        return newArray;\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(coin) {\n      return fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coin)).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"firstCoinHistory\",\n    value: function firstCoinHistory(state) {\n      var total = 0;\n      var promises = state.coins.map(function (coin) {\n        return fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coin.coin, \"/history?date=\").concat(state.created)).then(function (resp) {\n          return resp.json();\n        }).then(function (json) {\n          return total += json.market_data.current_price.eur * coin.amount;\n        });\n      });\n      return Promise.all(promises);\n    }\n  }, {\n    key: \"updateTotal\",\n    value: function updateTotal(total) {\n      var token = localStorage.getItem('token');\n      return fetch(this.dailyUpdate, {\n        method: 'PUT',\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          total: total\n        })\n      }).then(function (resp) {\n        return console.log(resp.json());\n      });\n    }\n  }, {\n    key: \"getAllCoinsHistory\",\n    value: function getAllCoinsHistory(state, days, breakevenpoint) {\n      var arrayTotal = [];\n\n      var _loop = function _loop(i) {\n        var day = new Date(API.changeDateFormatToUS(state.last_access));\n        day.setDate(day.getDate() + i);\n        var selectedDay = API.changeDataFormatfromDateToEU(day);\n        var promises = state.coins.map(function (coin) {\n          arrayTotal.push(fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(coin.coin, \"/history?date=\").concat(selectedDay)).then(function (resp) {\n            return resp.json();\n          }).then(function (json) {\n            return json.market_data.current_price.eur * coin.amount;\n          }));\n        });\n      };\n\n      for (var i = 1; i < days; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(arrayTotal);\n    }\n  }, {\n    key: \"last30days\",\n    value: function last30days(selectedCoin) {\n      var arrayTotal = [];\n\n      for (var i = 30; i > 0; i--) {\n        var day = new Date();\n        day.setDate(day.getDate() - i);\n        var selectedDay = API.changeDataFormatfromDateToEU(day);\n        arrayTotal.push(fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(selectedCoin.coin, \"/history?date=\").concat(selectedDay)).then(function (resp) {\n          return resp.json();\n        }).then(function (json) {\n          return json.market_data.current_price.eur * selectedCoin.amount;\n        }));\n      }\n\n      return Promise.all(arrayTotal);\n    }\n  }, {\n    key: \"changeDateFormatToUS\",\n    value: function changeDateFormatToUS(string) {\n      return \"\".concat(string.slice(3, 5), \"/\").concat(string.slice(0, 2), \"/\").concat(string.slice(6));\n    }\n  }, {\n    key: \"changeDataFormatfromDateToEU\",\n    value: function changeDataFormatfromDateToEU(date) {\n      return \"\".concat((\"0\" + date.getDate()).slice(-2), \"-\").concat((\"0\" + (date.getMonth() + 1)).slice(-2), \"-\").concat(date.getFullYear());\n    }\n  }, {\n    key: \"saveNote\",\n    value: function saveNote(note) {\n      var token = localStorage.saveNote('token');\n      return fetch(this.updateCoins, {\n        method: 'POST',\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          note: note\n        })\n      });\n    }\n  }]);\n\n  return API;\n}();\n\nAPI.init();\nexport default API;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/API.js"],"names":["API","baseUrl","signupUrl","signinUrl","validateUrl","itemUrl","newsUrl","createNews","getNewsUrl","getCoinsUrl","dailyUpdate","getTotal","saveNote","updateCoins","user","fetch","method","headers","body","JSON","stringify","then","resp","json","state","token","localStorage","getItem","req","Request","getnewsAPI","coins","console","log","results","string","map","coin","newArray","slice","e","push","value","label","total","promises","created","market_data","current_price","eur","amount","Promise","all","days","breakevenpoint","arrayTotal","i","day","Date","changeDateFormatToUS","last_access","setDate","getDate","selectedDay","changeDataFormatfromDateToEU","selectedCoin","date","getMonth","getFullYear","note","init"],"mappings":"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","sourcesContent":["class API {\n\n  static init () {\n    this.baseUrl='http://localhost:3001'\n    this.signupUrl=this.baseUrl+'/signup'\n    this.signinUrl=this.baseUrl+'/signin'\n    this.validateUrl=this.baseUrl+'/validate'\n    this.itemUrl=this.baseUrl+'/item'\n    this.newsUrl='https://newsapi.org/v2/top-headlines?sources=crypto-coins-news&apiKey=eb613f5fa10842a383014ef24f0a4740'\n    this.createNews=this.baseUrl+'/createnews'\n    this.getNewsUrl=this.baseUrl+'/getnews'\n    this.getCoinsUrl=this.baseUrl+'/getcoins'\n    this.dailyUpdate=this.baseUrl+'/dailyUpdate'\n    this.getTotal=this.baseUrl+'/getTotal'\n    this.saveNote=this.baseUrl+'/saveNote'\n    this.updateCoins=this.baseUrl+'/updateCoins'\n  }\n\n  static signin (user) {\n    return fetch(this.signinUrl, {\n      method: \"POST\",\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({user})\n    })\n    .then(resp => resp.json())\n  }\n\n  static signup (user) {\n   return fetch(this.signupUrl, {\n     method: 'POST',\n     headers: {'Content-Type': 'application/json'},\n     body: JSON.stringify({user})\n   }).then(resp => resp.json())\n }\n\n   static item (state) {\n    return fetch(this.itemUrl, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({state})\n    }).then(resp => resp.json())\n  }\n\n static validate () {\n   const token= localStorage.getItem('token')\n   return fetch(this.validateUrl, {\n     method: 'GET',\n     headers: {\n       'Authorization': token\n     },\n   }).then(resp => resp.json())\n }\n\n static newsAPI () {\n   var req = new Request(this.newsUrl);\n   return fetch(req)\n   .then(resp => resp.json())\n   .then(json=>{\n     return fetch(this.createNews, {\n       method: \"POST\",\n       headers: {'Content-Type': 'application/json'},\n       body: JSON.stringify({json})\n     })\n   })\n }\n\n static getnewsAPI () {\n   var req = new Request(this.newsUrl);\n   return fetch(req)\n   .then(resp => resp.json())\n }\n\n static async handleNews (){\n   return await API.getnewsAPI()\n }\n static getNews () {\n   return fetch(this.getNewsUrl)\n   .then(resp => resp.json())\n }\n\n static getCoins () {\n   const token= localStorage.getItem('token')\n   return fetch(this.getCoinsUrl, {\n     method: 'GET',\n     headers: {\n       'Authorization': token\n     },\n   })\n   .then(resp => resp.json())\n }\n\nstatic getTotal2 () {\n  const token= localStorage.getItem('token')\n  return fetch(this.getTotal, {\n    method: 'GET',\n    headers: {\n      'Authorization': token\n    },\n  })\n  .then(resp => resp.json())\n}\n\n  static updateCoins (coins) {\n    const token= localStorage.getItem('token')\n    return fetch(this.updateCoins, {\n      method: 'POST',\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({coins})\n    }).then(resp => console.log(resp.json()))\n  }\n  static updateCoins2 (coins) {\n    const token= localStorage.getItem('token')\n    return fetch(this.updateCoins, {\n      method: 'POST',\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({results: coins})\n    })\n  }\n\n static getCoinsCurrentValue (coins) {\n   let string =''\n   coins.map(coin=>{\n     return string+=`${coin}%2C`\n   })\n   return fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${string}&vs_currencies=eur`)\n  .then(resp => resp.json())\n\n }\n static getCoinSymbols () {\n    return fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n   .then(resp => resp.json())\n   .then(json => {\n     let newArray=[]\n     json.slice(0,100).map(function(e) {\n      return newArray.push({value:e[\"symbol\"], label: e[\"id\"]})\n  }\n)\n   return newArray\n })\n }\n\n\nstatic getValue (coin) {\n  return fetch(`https://api.coingecko.com/api/v3/coins/${coin}`)\n .then(resp => resp.json())\n}\n\n\nstatic firstCoinHistory(state){\n  let total = 0\n   const promises = state.coins.map(coin=>{\n    return  fetch(`https://api.coingecko.com/api/v3/coins/${coin.coin}/history?date=${state.created}`)\n    .then(resp => resp.json())\n    .then(json=>{\n      return total+=json.market_data.current_price.eur*coin.amount})\n   })\n   return Promise.all(promises)\n }\n\n static updateTotal(total){\n   const token= localStorage.getItem('token')\n   return fetch(this.dailyUpdate, {\n     method: 'PUT',\n     headers: {\n       'Authorization': token,\n       'Content-Type': 'application/json'\n     },\n     body: JSON.stringify({total: total})\n   }).then(resp => console.log(resp.json()))\n }\n\n\n static getAllCoinsHistory(state, days, breakevenpoint){\n    let arrayTotal = []\n    for (let i = 1; i < days; i++){\n     let day = new Date(API.changeDateFormatToUS(state.last_access))\n     day.setDate(day.getDate() + i)\n     let selectedDay = API.changeDataFormatfromDateToEU(day)\n      const promises = state.coins.map(coin => {\n        arrayTotal.push(fetch(`https://api.coingecko.com/api/v3/coins/${coin.coin}/history?date=${selectedDay}`)\n          .then(resp => resp.json())\n          .then(json => {\n            return json.market_data.current_price.eur * coin.amount})\n        )\n      })\n    }\n    return Promise.all(arrayTotal)\n  }\n\nstatic last30days(selectedCoin){\n  let arrayTotal = []\n  for (let i = 30; i > 0; i--){\n      let day = new Date()\n      day.setDate(day.getDate() - i)\n      let selectedDay = API.changeDataFormatfromDateToEU(day)\n      arrayTotal.push(fetch(`https://api.coingecko.com/api/v3/coins/${selectedCoin.coin}/history?date=${selectedDay}`)\n        .then(resp => resp.json())\n        .then(json => json.market_data.current_price.eur*selectedCoin.amount)\n      )\n  }\n  return Promise.all(arrayTotal)\n}\n\n\n  static changeDateFormatToUS (string){\n    return `${string.slice(3,5)}/${string.slice(0,2)}/${string.slice(6)}`\n  }\n\n  static changeDataFormatfromDateToEU (date){\n    return `${(\"0\" + date.getDate()).slice(-2)}-${(\"0\" + (date.getMonth() + 1)).slice(-2)}-${date.getFullYear()}`\n  }\n\n  static saveNote(note){\n    const token= localStorage.saveNote('token')\n    return fetch(this.updateCoins, {\n      method: 'POST',\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({note})\n    })\n  }\n\n\n\n\n\n\n\n\n}\n\n  API.init()\n\n  export default API\n"]},"metadata":{},"sourceType":"module"}