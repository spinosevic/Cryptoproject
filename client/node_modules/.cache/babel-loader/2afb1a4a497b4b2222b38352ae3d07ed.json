{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/flatironschool/Campus/module4/project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar API =\n/*#__PURE__*/\nfunction () {\n  function API() {\n    _classCallCheck(this, API);\n  }\n\n  _createClass(API, null, [{\n    key: \"init\",\n    value: function init() {\n      this.baseUrl = 'http://localhost:3001';\n      this.signupUrl = this.baseUrl + '/signup';\n      this.signinUrl = this.baseUrl + '/signin';\n      this.validateUrl = this.baseUrl + '/validate';\n      this.itemUrl = this.baseUrl + '/item';\n      this.newsUrl = 'https://newsapi.org/v2/top-headlines?sources=crypto-coins-news&apiKey=eb613f5fa10842a383014ef24f0a4740';\n      this.createNews = this.baseUrl + '/createnews';\n      this.getNewsUrl = this.baseUrl + '/getnews';\n      this.getCoinsUrl = this.baseUrl + '/getcoins';\n    }\n  }, {\n    key: \"signin\",\n    value: function signin(user) {\n      return fetch(this.signinUrl, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"signup\",\n    value: function signup(user) {\n      return fetch(this.signupUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"item\",\n    value: function item(state) {\n      return fetch(this.itemUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: state\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var token = localStorage.getItem('token');\n      return fetch(this.validateUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"newsAPI\",\n    value: function newsAPI() {\n      var _this = this;\n\n      var req = new Request(this.newsUrl);\n      return fetch(req).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        return fetch(_this.createNews, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            json: json\n          })\n        });\n      });\n    }\n  }, {\n    key: \"getNews\",\n    value: function getNews() {\n      return fetch(this.getNewsUrl).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getCoins\",\n    value: function getCoins() {\n      var token = localStorage.getItem('token');\n      return fetch(this.getCoinsUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': token\n        }\n      }).then(function (resp) {\n        return resp.json();\n      });\n    }\n  }, {\n    key: \"getCoinSymbols\",\n    value: function getCoinSymbols() {\n      console.log('before');\n      return fetch('https://api.coingecko.com/api/v3/coins/list').then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        var newArray = [];\n        json.slice(0, 100).map(function (e) {\n          return newArray.push({\n            value: e[\"symbol\"],\n            label: e[\"name\"]\n          });\n        });\n        return newArray;\n      });\n    }\n  }]);\n\n  return API;\n}();\n\nAPI.init();\nexport default API;","map":{"version":3,"sources":["/Users/flatironschool/flatironschool/Campus/module4/project/client/src/component/API.js"],"names":["API","baseUrl","signupUrl","signinUrl","validateUrl","itemUrl","newsUrl","createNews","getNewsUrl","getCoinsUrl","user","fetch","method","headers","body","JSON","stringify","then","resp","json","state","token","localStorage","getItem","req","Request","console","log","newArray","slice","map","e","push","value","label","init"],"mappings":"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","sourcesContent":["class API {\n\n  static init () {\n    this.baseUrl='http://localhost:3001'\n    this.signupUrl=this.baseUrl+'/signup'\n    this.signinUrl=this.baseUrl+'/signin'\n    this.validateUrl=this.baseUrl+'/validate'\n    this.itemUrl=this.baseUrl+'/item'\n    this.newsUrl='https://newsapi.org/v2/top-headlines?sources=crypto-coins-news&apiKey=eb613f5fa10842a383014ef24f0a4740'\n    this.createNews=this.baseUrl+'/createnews'\n    this.getNewsUrl=this.baseUrl+'/getnews'\n    this.getCoinsUrl=this.baseUrl+'/getcoins'\n\n  }\n\n  static signin (user) {\n    return fetch(this.signinUrl, {\n      method: \"POST\",\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({user})\n    })\n    .then(resp => resp.json())\n  }\n\n  static signup (user) {\n   return fetch(this.signupUrl, {\n     method: 'POST',\n     headers: {'Content-Type': 'application/json'},\n     body: JSON.stringify({user})\n   }).then(resp => resp.json())\n }\n\n   static item (state) {\n    return fetch(this.itemUrl, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({state})\n    }).then(resp => resp.json())\n  }\n\n static validate () {\n   const token= localStorage.getItem('token')\n   return fetch(this.validateUrl, {\n     method: 'GET',\n     headers: {\n       'Authorization': token\n     },\n   }).then(resp => resp.json())\n }\n\n static newsAPI () {\n   var req = new Request(this.newsUrl);\n   return fetch(req)\n   .then(resp => resp.json())\n   .then(json=>{\n     return fetch(this.createNews, {\n       method: \"POST\",\n       headers: {'Content-Type': 'application/json'},\n       body: JSON.stringify({json})\n     })\n   })\n }\n\n static getNews () {\n   return fetch(this.getNewsUrl)\n   .then(resp => resp.json())\n }\n\n static getCoins () {\n   const token= localStorage.getItem('token')\n   return fetch(this.getCoinsUrl, {\n     method: 'GET',\n     headers: {\n       'Authorization': token\n     },\n   })\n   .then(resp => resp.json())\n }\n\n\n static getCoinSymbols () {\n   console.log('before')\n    return fetch('https://api.coingecko.com/api/v3/coins/list')\n   .then(resp => resp.json())\n   .then(json => {\n     let newArray=[]\n     json.slice(0,100).map(function(e) {\n      return newArray.push({value:e[\"symbol\"], label: e[\"name\"]})\n\n  })\n   return newArray\n })\n }\n}\n\n\n\n  API.init()\n\n  export default API\n"]},"metadata":{},"sourceType":"module"}